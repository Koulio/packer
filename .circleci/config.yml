version: 2

defaults: &defaults
  docker:
    - image: koding/circle@sha256:76df7d9600f32d5c61b847e5c07e35a4332624097fe17681d618f1fcf97fb5c6
  working_directory: ~/packer

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
  packer-base:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: base
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: base
          no_output_timeout: 30m
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            ../ci/build-packer-template base.json
            [[ "$CIRCLE_BRANCH" == "master" ]] && ../ci/dump-ami-tags base.json || :
      - run:
          name: copy AMI tags
          working_directory: base
          environment:
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-sandbox
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] || exit 0
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ../ci/copy-ami-tags base.json

      - run:
          name: cleanup
          working_directory: base
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json

  packer-monitoring:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: monitoring
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: monitoring
          no_output_timeout: 20m
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            ../ci/build-packer-template base.json
            [[ "$CIRCLE_BRANCH" == "master" ]] && ../ci/dump-ami-tags base.json || :
      - run:
          name: copy AMI tags
          working_directory: monitoring
          environment:
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-sandbox
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] || exit 0
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ../ci/copy-ami-tags base.json
      - run:
          name: cleanup
          working_directory: monitoring
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json

  packer-druid:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: druid
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: druid
          no_output_timeout: 30m
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            ../ci/build-packer-template base.json
      - run:
          name: cleanup
          working_directory: druid
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json

  packer-kafka:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: kafka
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: kafka
          no_output_timeout: 30m
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            ../ci/build-packer-template base.json
      - run:
          name: cleanup
          working_directory: kafka
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json

  packer-zookeeper:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: zookeeper
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: zookeeper
          no_output_timeout: 30m
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            ../ci/build-packer-template base.json
      - run:
          name: cleanup
          working_directory: zookeeper
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json

  packer-countly:
    <<: *defaults
    steps:
      - checkout
      - run:
          working_directory: countly
          command: packer validate base.json
      - run:
          name: packer build base.json
          working_directory: countly
          no_output_timeout: 30m
          environment:
            COUNTLY_BUCKET: kodingdev-backups
          command: |
            export AWS_VPC_ID=$PACKER_BASE_AWS_VPC_ID AWS_SUBNET_ID=$PACKER_BASE_AWS_SUBNET_ID
            export COUNTLY_BUCKET
            ../ci/build-packer-template base.json
      - run:
          name: update kodingdev-countly environment
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] || exit 0
            curl --user ${CIRCLE_API_TOKEN}: \
                 --data build_parameters[CIRCLE_JOB]=kodingdev-countly \
                 https://circleci.com/api/v1.1/project/github/koding/infra/tree/master
      - run:
          name: cleanup
          working_directory: countly
          command: |
            [[ "$CIRCLE_BRANCH" == "master" ]] && exit 0
            ../ci/cleanup packer-manifest.json


  update-koding-sandbox:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-sandbox environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-sandbox
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-latest:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-latest environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-latest
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-prod:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-prod environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-prod
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-proxy-us-east-1:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-proxy-us-east-1 environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-proxy-us-east-1
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-proxy-eu-west-1:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-proxy-eu-west-1 environment
          environment:
            AWS_DEFAULT_REGION: eu-west-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-proxy-eu-west-1
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-proxy-ap-s-e-1:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-proxy-ap-s-e-1 environment
          environment:
            AWS_DEFAULT_REGION: ap-southeast-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-proxy-ap-s-e-1
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)


  update-koding-proxy-dev-us-e-1-v2:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-proxy-dev-us-e-1-v2 environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-proxy-dev-us-e-1-v2
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment base/base.json $(git rev-parse --short HEAD)

  update-koding-monitoring:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-monitoring environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-monitoring
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment monitoring/base.json $(git rev-parse --short HEAD)

  update-kodingdev-countly:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update kodingdev-countly environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: kodingdev-countly
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment countly/base.json $(git rev-parse --short HEAD)

  update-koding-countly:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: update koding-countly environment
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_EB_APP_NAME: koding
            AWS_EB_ENV_NAME: koding-countly
          command: |
            export AWS_DEFAULT_REGION AWS_EB_APP_NAME AWS_EB_ENV_NAME
            export AWS_ACCESS_KEY_ID=$KODING_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$KODING_AWS_SECRET_ACCESS_KEY
            ci/update-elasticbeanstalk-environment countly/base.json $(git rev-parse --short HEAD)

workflows:
  version: 2
  build_and_deploy_dev:
    jobs:
      - build
      - packer-base
      - packer-monitoring
      - packer-druid
      - packer-kafka
      - packer-zookeeper
      - packer-countly
      - update-koding-sandbox:
          requires:
            - packer-base
      - update-koding-proxy-dev-us-e-1-v2:
          requires:
            - packer-base
      - update-koding-monitoring:
          requires:
            - packer-monitoring
      - update-kodingdev-countly:
          requires:
            - packer-countly

      
